{"version":3,"sources":["static/cat404.svg","api/api.js","components/LoadingScreen.jsx","components/CircularProgress.jsx","components/MovieView.jsx","components/MovieItem.jsx","components/MovieList.jsx","components/MovieFeedShell.jsx","components/NotFound.jsx","components/MovieSearch.jsx","components/MovieFeed.jsx","components/LoadingSpinner.jsx","components/SearchBar.jsx","components/Nav.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","KEY","process","API_BASE","SEARCH_URL","query","page","apiSearch","fetch","then","response","json","apiGetMovie","movieId","GET_MOVIE_URL","apiGetTop","apiGetPopular","LoadingScreen","message","delay","useState","visible","setVisible","timeOutRef","useRef","useEffect","current","setTimeout","clearTimeout","className","CircularProgress","radius","stroke","progress","color","normalizedRadius","circumference","Math","PI","strokeDashoffset","height","width","fill","strokeWidth","strokeDasharray","style","r","cx","cy","MovieView","match","movie","setMovie","setError","params","id","catch","e","fixedDate","release_date","split","reverse","join","src","poster_path","alt","title","vote_average","vote_count","runtime","popularity","genres","map","item","key","name","overview","videos","results","length","href","MovieItem","to","MovieList","list","MovieFeedShell","num","shells","i","push","createShells","NotFound","catIcon","MovieSearch","state","movieList","loading","latestPage","totalPages","searchMovie","queryString","parse","props","location","search","q","setState","total_pages","console","log","getMoreMovies","this","prevProps","onClick","Component","MovieFeed","searchMovies","isNaN","lastPage","TopMovieFeed","PopularMovieFeed","LoadingSpinner","class","withRouter","history","val","setVal","setLoading","suggestions","setSuggestions","bounceTimeOut","searchValueFromUrl","pathname","URL","window","toString","searchParams","get","encodedQuery","encodeURIComponent","alert","value","onSubmit","setValue","onChange","labelExtractor","loadingIndicator","Nav","toggleDark","darkMode","mobileOpen","setMobileOpen","activeClass","isChecked","toggleChecked","App","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.872441ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat404.71280d69.svg\";","const KEY=process.env.REACT_APP_API_KEY;\r\nconst API_BASE=process.env.REACT_APP_API_BASE;\r\n\r\nconst SEARCH_URL=(query, page)=>`${API_BASE}search/movie?api_key=${KEY}&query=${query}&page=${page}`\r\nconst GET_MOVIE_URL=(movieId)=>`${API_BASE}movie/${movieId}?api_key=${KEY}&append_to_response=videos`\r\n\r\nexport const apiSearch=(query, page=1)=>fetch(SEARCH_URL(query, page)).then(response=>response.json());\r\n\r\nexport const apiGetMovie=(movieId)=>fetch(GET_MOVIE_URL(movieId)).then(response=>response.json())\r\n\r\nexport const apiGetTop=(page=1)=>fetch(`${API_BASE}movie/top_rated?api_key=${KEY}&page=${page}`).then(response=>response.json());\r\n\r\n\r\nexport const apiGetPopular=(page=1)=>fetch(`${API_BASE}movie/popular?api_key=${KEY}&page=${page}`).then(response=>response.json());\r\n","import React, {useEffect, useState, useRef} from 'react'\r\n\r\nexport const LoadingScreen = ({message, delay=0}) => {   \r\n    const [visible, setVisible]=useState(delay? false : true);\r\n    const timeOutRef=useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(delay) timeOutRef.current=setTimeout(()=>setVisible(true), delay);\r\n        return () => {\r\n            if(delay) clearTimeout(timeOutRef.current);\r\n        }\r\n    }, [])\r\n\r\n    if(!visible) return null;\r\n\r\n    return (\r\n        <div className=\"loadingScreen flexCenterAll\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst CircularProgress = ({radius=60, stroke=4, progress=100, color=\"black\", className=\"\"}) => {\r\n    const normalizedRadius=radius-stroke*2;\r\n    const circumference=normalizedRadius*2*Math.PI;\r\n    const strokeDashoffset=(circumference-progress / 100 * circumference);\r\n    return (\r\n        <svg\r\n            className={className}\r\n            height={radius * 2}\r\n            width={radius * 2}\r\n        >\r\n            <circle\r\n                stroke={color}\r\n                fill=\"transparent\"\r\n                strokeWidth={stroke}\r\n                strokeDasharray={circumference + ' ' + circumference}\r\n                style={{ strokeDashoffset }}\r\n                r={normalizedRadius}\r\n                cx={radius}\r\n                cy={radius}\r\n            />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default CircularProgress\r\n","import React, { useEffect, useState } from 'react'\r\nimport { apiGetMovie } from '../api/api'\r\nimport { LoadingScreen } from './LoadingScreen';\r\nimport CircularProgress from './CircularProgress';\r\n\r\nconst MovieView = ({ match }) => {\r\n    const [movie, setMovie] = useState(null);\r\n    const [error, setError] = useState('');\r\n    useEffect(() => {\r\n        apiGetMovie(match.params.id).then(json => setMovie(json)).catch(e => setError('failed! :( maybe try reloading the page'))\r\n    }, [match.params.id])\r\n\r\n    if (!movie) return <LoadingScreen delay={800} message=\"loading\" />\r\n\r\n\r\n    const fixedDate = movie.release_date.split('-').reverse().join('.');\r\n    return (\r\n        <div className=\"movieView\">\r\n            <div className=\"imageWrapper\">\r\n                <div className=\"imageDimension\">\r\n                    <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"movie poster\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"description\">\r\n                <h1>\r\n                    {movie.title}\r\n                </h1>\r\n                <div className=\"basicInfo\">\r\n                    <div className=\"movieRating flexCenterAll\">\r\n                        {movie.vote_average || 0}\r\n                        <CircularProgress className=\"bgCircle\" radius={33} stroke={4} progress={100} />\r\n                        <CircularProgress radius={35} stroke={5} progress={movie.vote_average*10} />\r\n                    </div>\r\n                    <p className=\"voteCount\">\r\n                        <strong>{movie.vote_count || 0}</strong> votes\r\n                    </p>\r\n\r\n                    <p className=\"release\">\r\n                        {fixedDate}\r\n                    </p>\r\n                    <p className=\"runtime\">\r\n                        <strong>{movie.runtime}</strong> min\r\n                    </p>\r\n                    <p className=\"popular\">\r\n                        <strong>{movie.popularity || 0}</strong> hits\r\n                    </p>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"genres\">\r\n                    {movie.genres.map(item =>\r\n                        <div className=\"genreItem flexCenterAll\" key={`tag_${movie.id}_${item.name}`}>\r\n                            {item.name}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <p className=\"overview\">\r\n                    {movie.overview}\r\n                </p>\r\n\r\n                {movie.videos && movie.videos.results.length > 0 &&\r\n                    <a href={`https://www.youtube.com/watch?v=${movie.videos.results[0].key}`} className=\"trailerLink\">\r\n                        Watch Trailer\r\n                    </a>\r\n                }\r\n\r\n                <a className=\"themoviedbLink\" href={\"https://www.themoviedb.org/movie/\" + movie.id}>\r\n                    see full description on <strong>themoviedb.org</strong>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieView\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieItem = ({ movie }) => {\r\n    const fixedDate = movie.release_date.split('-').reverse().join('.');\r\n    return (\r\n        <Link to={`/movie/${movie.id}`} className=\"movieItem\">\r\n            <div className=\"imageDimension\">\r\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"movie poster\" />\r\n            </div>\r\n            <div className=\"movieItemDesc\">\r\n                <p className=\"moviteItemTitle\">{movie.title}</p>\r\n                <div className=\"dateRatingWrapper\">\r\n                    <p className=\"movieRating flexCenterAll\">{movie.vote_average}</p>\r\n                    \r\n                    <p className=\"movieDate\">{fixedDate}</p>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"movieTagsWrapper\">\r\n            </div> */}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MovieItem\r\n","import React from 'react'\r\nimport MovieItem from './MovieItem'\r\n\r\nconst MovieList = ({list=[]}) => {\r\n    return (\r\n        <div className=\"thumbnailGrid\">\r\n            {list.map(movie=>\r\n                <MovieItem key={\"movie_pre_\"+movie.id} movie={movie}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n","import React from 'react'\r\n\r\nconst createShells=(num)=>{\r\n    const shells=[]\r\n    for(let i=0; i<num; i++){\r\n        shells.push(<div key={\"movie_pre_\" + i} className=\"movieItemShell\"/>)\r\n    }\r\n    return shells;\r\n}\r\n\r\nconst MovieFeedShell = () => {\r\n    return (\r\n        <div className=\"thumbnailGrid\">\r\n            {createShells(12)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieFeedShell\r\n","import React from 'react'\r\nimport catIcon from '../static/cat404.svg';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div id=\"notFound\">\r\n            <img src={catIcon} alt=\"404 cat\"/>\r\n            nothing found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react'\r\nimport queryString from 'query-string';\r\nimport MovieList from './MovieList'\r\nimport { apiSearch } from '../api/api';\r\nimport MovieFeedShell from './MovieFeedShell';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nexport default class MovieSearch extends Component {\r\n\r\n    query = \"\";\r\n    state = {\r\n        movieList: [],\r\n        loading: false,\r\n        latestPage: 1,\r\n        totalPages: 1\r\n    }\r\n\r\n    searchMovie = () => {\r\n        const query = queryString.parse(this.props.location.search);\r\n        if (!query.q) return\r\n        this.query = query.q;\r\n        this.setState({ loading: true })\r\n        apiSearch(this.query)\r\n            .then(json => {\r\n                this.setState({\r\n                    loading: false, movieList: json.results,\r\n                    latestPage: json.page || 1,\r\n                    totalPages: json.total_pages || 1\r\n                })\r\n\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchMovie();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.location.search !== this.props.location.search) {\r\n            console.log(\"up\");\r\n            this.searchMovie();\r\n\r\n        }\r\n    }\r\n\r\n    getMoreMovies = () => {\r\n        apiSearch(this.query, this.state.latestPage + 1)\r\n            .then(json => {\r\n                json.results && this.setState({\r\n                    loading: false, movieList: [...this.state.movieList, ...json.results],\r\n                    latestPage: json.page || 1,\r\n                    totalPages: json.total_pages || 1\r\n                })\r\n\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) return <MovieFeedShell/>\r\n        if (this.state.movieList.length) return (\r\n            <>\r\n                <MovieList list={this.state.movieList} />\r\n                {this.state.latestPage < this.state.totalPages ?\r\n                    <button onClick={this.getMoreMovies} className=\"loadMore\">\r\n                        more\r\n                    </button> :\r\n                    <div className=\"noMoreMovies\">\r\n                        end\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n        return <NotFound/>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport MovieList from './MovieList'\r\nimport { apiGetTop, apiGetPopular } from '../api/api';\r\nimport MovieFeedShell from './MovieFeedShell';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nexport default class MovieFeed extends Component {\r\n\r\n    state = {\r\n        movieList: [],\r\n        loading: false,\r\n        latestPage: 1,\r\n        totalPages: 1\r\n    }\r\n\r\n    searchMovies = () => {\r\n        /* function to get movies needs to be provided */\r\n        const page = this.props.match.params.page && !isNaN(this.props.match.params.page) ? this.props.match.params.page : 1;\r\n        \r\n        this.setState({loading: true})\r\n\r\n        this.props.apiSearch(page)\r\n            .then(json => {\r\n                json.results && this.setState({\r\n                    loading: false, movieList: json.results,\r\n                    latestPage: json.page || 1,\r\n                    totalPages: json.total_pages || 1\r\n                })\r\n                this.latestPage = json.page || 1;\r\n                this.lastPage = json.total_pages || 1;\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    getMoreMovies = () => {\r\n        this.props.apiSearch(this.state.latestPage + 1)\r\n            .then(json => {\r\n                json.results && this.setState(\r\n                    {\r\n                        loading: false,\r\n                        movieList: [...this.state.movieList, ...json.results],\r\n                        latestPage: json.page || 1,\r\n                        totalPages: json.total_pages || 1\r\n                    }\r\n                )\r\n                this.latestPage = json.page || 1;\r\n                this.lastPage = json.total_pages || 1;\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchMovies();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.match.params.page!==this.props.match.params.page){\r\n            this.searchMovies();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.loading) return <MovieFeedShell/>\r\n        if (this.state.movieList.length) return (\r\n            <>\r\n                <MovieList list={this.state.movieList} />\r\n                {this.state.latestPage < this.state.totalPages ?\r\n                    <button onClick={this.getMoreMovies} className=\"loadMore\">\r\n                        more\r\n                    </button> :\r\n                    <div className=\"noMoreMovies\">\r\n                        end\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n        return <NotFound/>\r\n    }\r\n}\r\n\r\n\r\nexport const TopMovieFeed = (props) => <MovieFeed apiSearch={apiGetTop} {...props} />\r\n\r\nexport const PopularMovieFeed = (props) => <MovieFeed apiSearch={apiGetPopular} {...props} />","import React from 'react'\r\nimport '../styles/loadingSpinner.css'\r\n\r\nexport const LoadingSpinner = () => {\r\n    return (\r\n        <div class=\"spinner\">\r\n            <div class=\"rect1\"></div>\r\n            <div class=\"rect2\"></div>\r\n            <div class=\"rect3\"></div>\r\n            <div class=\"rect4\"></div>\r\n            <div class=\"rect5\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { apiSearch } from '../api/api';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AutoSuggestSearch from '@kantimam/react-autosuggest'\r\nimport { LoadingSpinner } from './LoadingSpinner';\r\n\r\n\r\nconst SearchBar = ({ history }) => {\r\n    const [val, setVal] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [suggestions, setSuggestions]=useState([]);\r\n    const bounceTimeOut = useRef();\r\n    \r\n    useEffect(()=>{\r\n        bounceTimeOut.current = 0;\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        searchValueFromUrl();\r\n    }, [history.location.search])\r\n\r\n    const searchValueFromUrl=()=>{\r\n        if(history.location.pathname!==\"/search\") return\r\n        /* if page gets reloaded or someone just uses the url fill the input value */\r\n        const url = new URL(window.location.toString());\r\n        const query = url.searchParams.get(\"q\");\r\n        if (query) {\r\n            setVal(query);\r\n            searchMovies(query, true)\r\n            return query;\r\n        }\r\n    }\r\n\r\n    const searchMovies = (query) => {\r\n        if(!query) return\r\n        const encodedQuery = encodeURIComponent(query);\r\n\r\n        setLoading(true);\r\n        apiSearch(encodedQuery)\r\n            .then(json => {\r\n                setLoading(false);\r\n                setSuggestions(json.results);\r\n\r\n            })\r\n            .catch(e => {\r\n                alert(e);\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    const onSubmit=()=>{\r\n        /* searchMovies(val, true); */\r\n        history.push(`/search?q=${encodeURIComponent(val)}`);\r\n    }\r\n\r\n    const onChange = (value) => {\r\n        if (!value) return\r\n        clearTimeout(bounceTimeOut.current);\r\n        bounceTimeOut.current = setTimeout(() => searchMovies(value), 1200);\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <AutoSuggestSearch\r\n            suggestions={suggestions}\r\n            value={val}\r\n            onSubmit={onSubmit}\r\n            setValue={setVal}\r\n            onChange={onChange}\r\n            /* onSuggestionSelect={setVal} */\r\n \r\n            labelExtractor={(item)=>item.title}\r\n\r\n            loading={loading}\r\n            loadingIndicator={<LoadingSpinner/>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBar)\r\n","import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SearchBar from './SearchBar'\r\nimport DarkModeToggle from 'react-dark-mode-switch'\r\n\r\nexport const Nav = ({ toggleDark, darkMode }) => {\r\n    const [mobileOpen, setMobileOpen] = useState(false);\r\n    return (\r\n        <nav>\r\n            <div className=\"inner normalNav\">\r\n                <NavLink to=\"/\"><h3>CoronaAid</h3></NavLink>\r\n\r\n\r\n                <ul>\r\n                    <li><NavLink to=\"/top\">top rated</NavLink></li>\r\n                    <li><NavLink to=\"/popular\">Popular</NavLink></li>\r\n                </ul>\r\n                <SearchBar />\r\n                <DarkModeToggle activeClass=\"darkActive\" id=\"darkModeToggle\" isChecked={darkMode} toggleChecked={toggleDark} />\r\n                <div onClick={() => setMobileOpen(!mobileOpen)} className=\"openNavIcon\">NAV</div>\r\n\r\n            </div>\r\n            {mobileOpen &&\r\n                <div className=\"mobileNav\">\r\n                    <ul>\r\n                        <li><NavLink to=\"/top\">top rated</NavLink></li>\r\n                        <li><NavLink to=\"/popular\">Popular</NavLink></li>\r\n                    </ul>\r\n                    <SearchBar />\r\n\r\n                </div>\r\n            }\r\n        </nav>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport MovieView from './components/MovieView';\r\nimport './styles/app.css';\r\nimport MovieSearch from './components/MovieSearch';\r\nimport {TopMovieFeed, PopularMovieFeed} from './components/MovieFeed';\r\nimport { Nav } from './components/Nav';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    darkMode: false,\r\n\r\n  }\r\n\r\n  toggleDark=()=>{\r\n    this.setState({darkMode: !this.state.darkMode})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`App ${this.state.darkMode ? 'darkMode' : 'light'}`}>\r\n        <Nav darkMode={this.state.darkMode} toggleDark={this.toggleDark} />\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/top/:page?\" component={TopMovieFeed} />\r\n            <Route path=\"/search\" component={MovieSearch} />\r\n            <Route path=\"/movie/:id\" component={MovieView} />\r\n            <Route path=\"/popular/:page?\" component={PopularMovieFeed}/>\r\n            <Route path=\"/:page?\" component={PopularMovieFeed}/>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}