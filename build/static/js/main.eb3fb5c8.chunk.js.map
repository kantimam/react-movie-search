{"version":3,"sources":["static/cat404.svg","api/api.js","components/LoadingScreen.jsx","components/CircularProgress.jsx","components/MovieView.jsx","components/MovieItem.jsx","components/MovieList.jsx","components/MovieFeedShell.jsx","components/NotFound.jsx","components/MovieSearch.jsx","components/MovieFeed.jsx","components/LoadingSpinner.jsx","components/SearchBar.jsx","components/Nav.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","KEY","process","API_BASE","SEARCH_URL","query","page","apiSearch","fetch","then","response","json","apiGetMovie","movieId","GET_MOVIE_URL","apiGetTop","apiGetPopular","LoadingScreen","message","delay","useState","visible","setVisible","timeOutRef","useRef","useEffect","current","setTimeout","clearTimeout","className","CircularProgress","radius","stroke","progress","color","normalizedRadius","circumference","Math","PI","strokeDashoffset","height","width","fill","strokeWidth","strokeDasharray","style","r","cx","cy","MovieView","match","movie","setMovie","setError","params","id","catch","e","src","poster_path","alt","title","vote_average","vote_count","dateTime","release_date","runtime","popularity","genres","map","item","key","name","overview","videos","results","length","href","target","rel","MovieItem","fixedDate","String","split","reverse","join","to","MovieList","list","MovieFeedShell","num","shells","i","push","createShells","NotFound","catIcon","MovieSearch","state","movieList","loading","latestPage","totalPages","searchMovie","queryString","parse","props","location","search","q","setState","total_pages","console","log","getMoreMovies","this","prevProps","onClick","Component","MovieFeed","searchMovies","isNaN","lastPage","TopMovieFeed","PopularMovieFeed","LoadingSpinner","class","withRouter","history","val","setVal","setLoading","suggestions","setSuggestions","bounceTimeOut","searchValueFromUrl","pathname","URL","window","toString","searchParams","get","encodedQuery","encodeURIComponent","alert","value","onSubmit","setValue","onChange","labelExtractor","loadingIndicator","Nav","toggleDark","darkMode","mobileOpen","setMobileOpen","activeClass","isChecked","toggleChecked","App","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.eb3fb5c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat404.71280d69.svg\";","const KEY=process.env.REACT_APP_API_KEY;\nconst API_BASE=process.env.REACT_APP_API_BASE;\n\nconst SEARCH_URL=(query, page)=>`${API_BASE}search/movie?api_key=${KEY}&query=${query}&page=${page}`\nconst GET_MOVIE_URL=(movieId)=>`${API_BASE}movie/${movieId}?api_key=${KEY}&append_to_response=videos`\n\nexport const apiSearch=(query, page=1)=>fetch(SEARCH_URL(query, page)).then(response=>response.json());\n\nexport const apiGetMovie=(movieId)=>fetch(GET_MOVIE_URL(movieId)).then(response=>response.json())\n\nexport const apiGetTop=(page=1)=>fetch(`${API_BASE}movie/top_rated?api_key=${KEY}&page=${page}`).then(response=>response.json());\n\n\nexport const apiGetPopular=(page=1)=>fetch(`${API_BASE}movie/popular?api_key=${KEY}&page=${page}`).then(response=>response.json());\n","import React, {useEffect, useState, useRef} from 'react'\n\nexport const LoadingScreen = ({message, delay=0}) => {   \n    const [visible, setVisible]=useState(delay? false : true);\n    const timeOutRef=useRef(null);\n\n    useEffect(() => {\n        if(delay) timeOutRef.current=setTimeout(()=>setVisible(true), delay);\n        return () => {\n            if(delay) clearTimeout(timeOutRef.current);\n        }\n    }, [])\n\n    if(!visible) return null;\n\n    return (\n        <div className=\"loadingScreen flexCenterAll\">\n            {message}\n        </div>\n    )\n}\n","import React from 'react'\n\nconst CircularProgress = ({radius=60, stroke=4, progress=100, color=\"black\", className=\"\"}) => {\n    const normalizedRadius=radius-stroke*2;\n    const circumference=normalizedRadius*2*Math.PI;\n    const strokeDashoffset=(circumference-progress / 100 * circumference);\n    return (\n        <svg\n            className={className}\n            height={radius * 2}\n            width={radius * 2}\n        >\n            <circle\n                stroke={color}\n                fill=\"transparent\"\n                strokeWidth={stroke}\n                strokeDasharray={circumference + ' ' + circumference}\n                style={{ strokeDashoffset }}\n                r={normalizedRadius}\n                cx={radius}\n                cy={radius}\n            />\n        </svg>\n    )\n}\n\nexport default CircularProgress\n","import React, { useEffect, useState } from \"react\";\nimport { apiGetMovie } from \"../api/api\";\nimport { LoadingScreen } from \"./LoadingScreen\";\nimport CircularProgress from \"./CircularProgress\";\n\nconst MovieView = ({ match }) => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    apiGetMovie(match.params.id)\n      .then((json) => setMovie(json))\n      .catch((e) => setError(\"failed! :( maybe try reloading the page\"));\n  }, [match.params.id]);\n\n  if (!movie) return <LoadingScreen delay={800} message=\"loading\" />;\n\n  /* const fixedDate =\n    movie.release_date && movie.release_date instanceof String\n      ? movie.release_date.split(\"-\").reverse().join(\".\")\n      : \"\"; */\n\n  return (\n    <div className=\"movieView\">\n      <div className=\"imageWrapper\">\n        <div className=\"imageDimension\">\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt=\"movie poster\"\n          />\n        </div>\n      </div>\n      <div className=\"description\">\n        <h1>{movie.title}</h1>\n        <div className=\"basicInfo\">\n          <div className=\"movieRating flexCenterAll\">\n            {movie.vote_average || 0}\n            <CircularProgress\n              className=\"bgCircle\"\n              radius={33}\n              stroke={4}\n              progress={100}\n            />\n            <CircularProgress\n              radius={35}\n              stroke={5}\n              progress={movie.vote_average * 10}\n            />\n          </div>\n          <div className=\"basicInfoInner\">\n            <p className=\"voteCount\">\n              <strong>{movie.vote_count || 0}</strong> votes\n            </p>\n\n            <time className=\"release\" dateTime={movie.release_date}>\n              {movie.release_date}\n            </time>\n            <p className=\"runtime\">\n              <strong>{movie.runtime}</strong> min\n            </p>\n            <p className=\"popular\">\n              <strong>{movie.popularity || 0}</strong> hits\n            </p>\n          </div>\n        </div>\n\n        <div className=\"genres\">\n          {movie.genres.map((item) => (\n            <div\n              className=\"genreItem flexCenterAll\"\n              key={`tag_${movie.id}_${item.name}`}\n            >\n              {item.name}\n            </div>\n          ))}\n        </div>\n\n        <p className=\"overview\">{movie.overview}</p>\n\n        {movie.videos && movie.videos.results.length > 0 && (\n          <a\n            href={`https://www.youtube.com/watch?v=${movie.videos.results[0].key}`}\n            className=\"trailerLink\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Watch Trailer\n          </a>\n        )}\n\n        <a\n          className=\"themoviedbLink\"\n          href={\"https://www.themoviedb.org/movie/\" + movie.id}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          see full description on <strong>themoviedb.org</strong>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieView;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst MovieItem = ({ movie }) => {\n\n    const fixedDate = movie.release_date && movie.release_date instanceof String ?\n        movie.release_date.split('-').reverse().join('.') : '';\n\n\n    return (\n        <Link to={`/movie/${movie.id}`} className=\"movieItem\">\n            <div className=\"imageDimension\">\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"movie poster\" />\n            </div>\n            <div className=\"movieItemDesc\">\n                <p className=\"moviteItemTitle\">{movie.title}</p>\n                <div className=\"dateRatingWrapper\">\n                    <p className=\"movieRating flexCenterAll\">{movie.vote_average}</p>\n\n                    <p className=\"movieDate\">{fixedDate}</p>\n                </div>\n            </div>\n            {/* <div className=\"movieTagsWrapper\">\n            </div> */}\n        </Link>\n    )\n}\n\nexport default MovieItem\n","import React from 'react'\nimport MovieItem from './MovieItem'\n\nconst MovieList = ({list=[]}) => {\n    return (\n        <div className=\"thumbnailGrid\">\n            {list.map(movie=>\n                <MovieItem key={\"movie_pre_\"+movie.id} movie={movie}/>\n            )}\n        </div>\n    )\n}\n\nexport default MovieList\n","import React from 'react'\n\nconst createShells=(num)=>{\n    const shells=[]\n    for(let i=0; i<num; i++){\n        shells.push(<div key={\"movie_pre_\" + i} className=\"movieItemShell\"/>)\n    }\n    return shells;\n}\n\nconst MovieFeedShell = () => {\n    return (\n        <div className=\"thumbnailGrid\">\n            {createShells(12)}\n        </div>\n    )\n}\n\nexport default MovieFeedShell\n","import React from 'react'\nimport catIcon from '../static/cat404.svg';\n\nconst NotFound = () => {\n    return (\n        <div id=\"notFound\">\n            <img src={catIcon} alt=\"404 cat\"/>\n            nothing found\n        </div>\n    )\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport queryString from 'query-string';\nimport MovieList from './MovieList'\nimport { apiSearch } from '../api/api';\nimport MovieFeedShell from './MovieFeedShell';\nimport NotFound from './NotFound';\n\n\nexport default class MovieSearch extends Component {\n\n    query = \"\";\n    state = {\n        movieList: [],\n        loading: false,\n        latestPage: 1,\n        totalPages: 1\n    }\n\n    searchMovie = () => {\n        const query = queryString.parse(this.props.location.search);\n        if (!query.q) return\n        this.query = query.q;\n        this.setState({ loading: true })\n        apiSearch(this.query)\n            .then(json => {\n                this.setState({\n                    loading: false, movieList: json.results,\n                    latestPage: json.page || 1,\n                    totalPages: json.total_pages || 1\n                })\n\n            })\n            .catch(e => {\n                console.log(e);\n                this.setState({ loading: false })\n            })\n    }\n\n    componentDidMount() {\n        this.searchMovie();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location.search !== this.props.location.search) {\n            console.log(\"up\");\n            this.searchMovie();\n\n        }\n    }\n\n    getMoreMovies = () => {\n        apiSearch(this.query, this.state.latestPage + 1)\n            .then(json => {\n                json.results && this.setState({\n                    loading: false, movieList: [...this.state.movieList, ...json.results],\n                    latestPage: json.page || 1,\n                    totalPages: json.total_pages || 1\n                })\n\n            })\n            .catch(e => {\n                console.log(e);\n                this.setState({ loading: false })\n            })\n    }\n\n    render() {\n        if (this.state.loading) return <MovieFeedShell/>\n        if (this.state.movieList.length) return (\n            <>\n                <MovieList list={this.state.movieList} />\n                {this.state.latestPage < this.state.totalPages ?\n                    <button onClick={this.getMoreMovies} className=\"loadMore\">\n                        more\n                    </button> :\n                    <div className=\"noMoreMovies\">\n                        end\n                    </div>\n                }\n            </>\n        )\n        return <NotFound/>\n    }\n}\n","import React, { Component } from 'react'\nimport MovieList from './MovieList'\nimport { apiGetTop, apiGetPopular } from '../api/api';\nimport MovieFeedShell from './MovieFeedShell';\nimport NotFound from './NotFound';\n\n\nexport default class MovieFeed extends Component {\n\n    state = {\n        movieList: [],\n        loading: false,\n        latestPage: 1,\n        totalPages: 1\n    }\n\n    searchMovies = () => {\n        /* function to get movies needs to be provided */\n        const page = this.props.match.params.page && !isNaN(this.props.match.params.page) ? this.props.match.params.page : 1;\n        \n        this.setState({loading: true})\n\n        this.props.apiSearch(page)\n            .then(json => {\n                json.results && this.setState({\n                    loading: false, movieList: json.results,\n                    latestPage: json.page || 1,\n                    totalPages: json.total_pages || 1\n                })\n                this.latestPage = json.page || 1;\n                this.lastPage = json.total_pages || 1;\n            })\n            .catch(e => {\n                console.log(e);\n                this.setState({ loading: false })\n            })\n    }\n\n    getMoreMovies = () => {\n        this.props.apiSearch(this.state.latestPage + 1)\n            .then(json => {\n                json.results && this.setState(\n                    {\n                        loading: false,\n                        movieList: [...this.state.movieList, ...json.results],\n                        latestPage: json.page || 1,\n                        totalPages: json.total_pages || 1\n                    }\n                )\n                this.latestPage = json.page || 1;\n                this.lastPage = json.total_pages || 1;\n            })\n            .catch(e => {\n                console.log(e);\n                this.setState({ loading: false })\n            })\n    }\n\n    componentDidMount() {\n        this.searchMovies();\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.match.params.page!==this.props.match.params.page){\n            this.searchMovies();\n        }\n    }\n\n\n    render() {\n\n        if (this.state.loading) return <MovieFeedShell/>\n        if (this.state.movieList.length) return (\n            <>\n                <MovieList list={this.state.movieList} />\n                {this.state.latestPage < this.state.totalPages ?\n                    <button onClick={this.getMoreMovies} className=\"loadMore\">\n                        more\n                    </button> :\n                    <div className=\"noMoreMovies\">\n                        end\n                    </div>\n                }\n            </>\n        )\n        return <NotFound/>\n    }\n}\n\n\nexport const TopMovieFeed = (props) => <MovieFeed apiSearch={apiGetTop} {...props} />\n\nexport const PopularMovieFeed = (props) => <MovieFeed apiSearch={apiGetPopular} {...props} />","import React from 'react'\nimport '../styles/loadingSpinner.css'\n\nexport const LoadingSpinner = () => {\n    return (\n        <div class=\"spinner\">\n            <div class=\"rect1\"></div>\n            <div class=\"rect2\"></div>\n            <div class=\"rect3\"></div>\n            <div class=\"rect4\"></div>\n            <div class=\"rect5\"></div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { apiSearch } from '../api/api';\nimport { withRouter } from 'react-router-dom';\nimport AutoSuggestSearch from '@kantimam/react-autosuggest'\nimport { LoadingSpinner } from './LoadingSpinner';\n\n\nconst SearchBar = ({ history }) => {\n    const [val, setVal] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [suggestions, setSuggestions]=useState([]);\n    const bounceTimeOut = useRef();\n    \n    useEffect(()=>{\n        bounceTimeOut.current = 0;\n    },[])\n\n    useEffect(() => {\n        searchValueFromUrl();\n    }, [history.location.search])\n\n    const searchValueFromUrl=()=>{\n        if(history.location.pathname!==\"/search\") return\n        /* if page gets reloaded or someone just uses the url fill the input value */\n        const url = new URL(window.location.toString());\n        const query = url.searchParams.get(\"q\");\n        if (query) {\n            setVal(query);\n            searchMovies(query, true)\n            return query;\n        }\n    }\n\n    const searchMovies = (query) => {\n        if(!query) return\n        const encodedQuery = encodeURIComponent(query);\n\n        setLoading(true);\n        apiSearch(encodedQuery)\n            .then(json => {\n                setLoading(false);\n                setSuggestions(json.results);\n\n            })\n            .catch(e => {\n                alert(e);\n                setLoading(false);\n            });\n    }\n\n    const onSubmit=()=>{\n        /* searchMovies(val, true); */\n        history.push(`/search?q=${encodeURIComponent(val)}`);\n    }\n\n    const onChange = (value) => {\n        if (!value) return\n        clearTimeout(bounceTimeOut.current);\n        bounceTimeOut.current = setTimeout(() => searchMovies(value), 1200);\n\n    }\n\n    \n    return (\n        <AutoSuggestSearch\n            suggestions={suggestions}\n            value={val}\n            onSubmit={onSubmit}\n            setValue={setVal}\n            onChange={onChange}\n            /* onSuggestionSelect={setVal} */\n \n            labelExtractor={(item)=>item.title}\n\n            loading={loading}\n            loadingIndicator={<LoadingSpinner/>}\n        />\n    )\n}\n\nexport default withRouter(SearchBar)\n","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport SearchBar from './SearchBar'\nimport DarkModeToggle from 'react-dark-mode-switch'\n\nexport const Nav = ({ toggleDark, darkMode }) => {\n    const [mobileOpen, setMobileOpen] = useState(false);\n    return (\n        <nav>\n            <div className=\"inner normalNav\">\n                <NavLink to=\"/\"><h3>CoronaAid</h3></NavLink>\n\n\n                <ul>\n                    <li><NavLink to=\"/top\">top rated</NavLink></li>\n                    <li><NavLink to=\"/popular\">Popular</NavLink></li>\n                </ul>\n                <SearchBar />\n                <DarkModeToggle activeClass=\"darkActive\" id=\"darkModeToggle\" isChecked={darkMode} toggleChecked={toggleDark} />\n                <div onClick={() => setMobileOpen(!mobileOpen)} className=\"openNavIcon\">NAV</div>\n\n            </div>\n            {mobileOpen &&\n                <div className=\"mobileNav\">\n                    <ul>\n                        <li><NavLink to=\"/top\">top rated</NavLink></li>\n                        <li><NavLink to=\"/popular\">Popular</NavLink></li>\n                    </ul>\n                    <SearchBar />\n\n                </div>\n            }\n        </nav>\n    )\n}\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom';\nimport MovieView from './components/MovieView';\nimport './styles/app.css';\nimport MovieSearch from './components/MovieSearch';\nimport {TopMovieFeed, PopularMovieFeed} from './components/MovieFeed';\nimport { Nav } from './components/Nav';\n\n\n\nexport default class App extends Component {\n  state = {\n    darkMode: false,\n\n  }\n\n  toggleDark=()=>{\n    this.setState({darkMode: !this.state.darkMode})\n  }\n\n  render() {\n    return (\n      <div className={`App ${this.state.darkMode ? 'darkMode' : 'light'}`}>\n        <Nav darkMode={this.state.darkMode} toggleDark={this.toggleDark} />\n        <main>\n          <Switch>\n            <Route path=\"/top/:page?\" component={TopMovieFeed} />\n            <Route path=\"/search\" component={MovieSearch} />\n            <Route path=\"/movie/:id\" component={MovieView} />\n            <Route path=\"/popular/:page?\" component={PopularMovieFeed}/>\n            <Route path=\"/:page?\" component={PopularMovieFeed}/>\n          </Switch>\n        </main>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}